package com.system.pojo;

import com.system.po.User;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @Delete({
        "delete from user",
        "where userId = #{userid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer userid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @Insert({
        "insert into user (userId, telephone, ",
        "`type`, `password`, ",
        "passwordSalt, nickName, ",
        "email, createDate, ",
        "createIp, lastUpdateDate, ",
        "lastUpdateIp)",
        "values (#{userid,jdbcType=INTEGER}, #{telephone,jdbcType=INTEGER}, ",
        "#{type,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, ",
        "#{passwordsalt,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, ",
        "#{email,jdbcType=VARCHAR}, #{createdate,jdbcType=INTEGER}, ",
        "#{createip,jdbcType=INTEGER}, #{lastupdatedate,jdbcType=INTEGER}, ",
        "#{lastupdateip,jdbcType=INTEGER})"
    })
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @InsertProvider(type=UserSqlProvider.class, method="insertSelective")
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "userId, telephone, `type`, `password`, passwordSalt, nickName, email, createDate, ",
        "createIp, lastUpdateDate, lastUpdateIp",
        "from user",
        "where userId = #{userid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="userId", property="userid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="telephone", property="telephone", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="passwordSalt", property="passwordsalt", jdbcType=JdbcType.VARCHAR),
        @Result(column="nickName", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="createDate", property="createdate", jdbcType=JdbcType.INTEGER),
        @Result(column="createIp", property="createip", jdbcType=JdbcType.INTEGER),
        @Result(column="lastUpdateDate", property="lastupdatedate", jdbcType=JdbcType.INTEGER),
        @Result(column="lastUpdateIp", property="lastupdateip", jdbcType=JdbcType.INTEGER)
    })
    User selectByPrimaryKey(Integer userid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @UpdateProvider(type=UserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @Update({
        "update user",
        "set telephone = #{telephone,jdbcType=INTEGER},",
          "`type` = #{type,jdbcType=INTEGER},",
          "`password` = #{password,jdbcType=VARCHAR},",
          "passwordSalt = #{passwordsalt,jdbcType=VARCHAR},",
          "nickName = #{nickname,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "createDate = #{createdate,jdbcType=INTEGER},",
          "createIp = #{createip,jdbcType=INTEGER},",
          "lastUpdateDate = #{lastupdatedate,jdbcType=INTEGER},",
          "lastUpdateIp = #{lastupdateip,jdbcType=INTEGER}",
        "where userId = #{userid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(User record);
}